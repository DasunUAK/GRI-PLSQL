SELECT 
T1.PART_NO,
T2.DESCRIPTION AS PART_DESCRIPTION,
T6.description AS CATEGORY,
ROUND(T4.On_Hand,2) as On_HAND_QTY,
ROUND(T3.t_value,2) as TOTAL_INVENTORY_VALUE,
T0.ORDER_NO,
T1.BUY_QTY_DUE AS DELIVER_QTY,
ROUND(T1.FBUY_UNIT_PRICE,2) as UNIT_COST,
T5.CF$_DAILY_CONSUMPTION AS DAILY_CONSUMPTION

FROM PURCHASE_ORDER_CFV T0 
INNER JOIN PURCHASE_ORDER_LINE_CFV T1 ON T0.ORDER_NO = T1.ORDER_NO
INNER JOIN INVENTORY_PART_CFV T2 ON T1.PART_NO = T2.PART_NO
LEFT JOIN
(select
SUM(qty_available) as On_Hand,part_no
from 
Inventory_Part_In_Stock_Lov5 
Group By
part_no)T4 ON T1.PART_NO = T4.PART_NO
LEFT JOIN
(SELECT part_no,
(SUM(qty_onhand) + SUM(qty_in_transit)) as t_value
FROM INVENTORY_PART_IN_STOCK 
where qty_onhand > 0
Group By part_no) T3 ON T1.PART_NO = T3.PART_NO

Left Join
RAW_MAT_DAILY_FORECAST_CLV T5 ON T1.PART_NO = T5.cf$_Part_No
INNER JOIN INVENTORY_PRODUCT_FAMILY T6 ON T2.PART_PRODUCT_FAMILY = T6.part_product_family

WHERE T0.STATE = 'Released' AND T2.PART_PRODUCT_CODE = 'DMT'

GROUP BY T0.ORDER_NO,
T1.PART_NO,
T2.DESCRIPTION,
T6.description,
T4.On_Hand,
T3.t_value,
T1.FBUY_UNIT_PRICE,
T1.BUY_QTY_DUE,
T5.CF$_DAILY_CONSUMPTION

Order by T1.PART_NO